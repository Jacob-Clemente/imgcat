#!/bin/sh

# A handwritten ./configure script, because I kind of hate autotools.
# Â© 2020 Eddie Antonio Santos <easantos@ualberta.ca>

set -e

################################# CONSTANTS ##################################

version="$(<VERSION tr -d '\r')"
headers="sys/ioctl.h sys/time.h term.h sysexits.h"


################################# VARIABLES ##################################

# A series of #define lines to write in src/cimg_config.h
defines=""
# A space-separated list of libraries to link with -l
libs=""
# The program used for pandoc
pandoc=""


############################# INTERNAL CONSTANTS #############################

# see: man 3 sysexits
EX_UNAVAILABLE=69
# (nice)

NEWLINE="$(printf '\n ')" && NEWLINE="${NEWLINE% }"

# Use the default C compiler
CC="${CC:-gcc}"
TMPDIR="${TMPDIR:-/tmp}"


############################## HELPER FUNCTIONS ##############################

# Print an error message and quit
error() {
  echo "$@" 1>&2
  exit ${EX_UNAVAILABLE}
}

# Create a test program that uses a library function and link against that
# library. Returns zero on if the library was linked succesfully, non-zero
# otherwise.
link_lib_against_test_program() {
  funcname=$1
  lib=$2

  printf 'checking to link with lib%s [using %s()]... ' "$lib" "$funcname"

  filename="${TMPDIR}/conftest.$$.c"

  cat > "${filename}" <<EOF
    char ${funcname}(void);

    int main(void) {
      return ${funcname}();
    }
EOF

  if ${CC} -o /dev/null "${filename}" "-l${lib}"; then
    echo "yes"
    return 0
  else
    echo "no"
    return 1
  fi
}

# Create a test program that includes the given system header.
compile_with_header() {
  header=$1

  printf 'checking for %s... ' "$header"

  filename="${TMPDIR}/conftest.$$.c"
  cat > "${filename}" <<EOF
  #include <${header}>
EOF

  if $CC -c -o /dev/null "${filename}" ; then
    echo "yes"
    return 0
  else
    echo "no"
    return 1
  fi
}

check_for_program() {
  program="$1"

  printf 'checking for %s... ' "${program}"
  if which "${program}" >/dev/null 2>&1 ; then
    echo "${program}"
    return 0
  else
    echo "no"
    return 1
  fi
}


############################# Check for features #############################

# assert headers exist
for header in $headers ; do
  if ! compile_with_header "$header" ; then
    error "failed to find required header: $header"
  fi
done

# -lcurses (required)
if link_lib_against_test_program tigetnum curses ; then
  libs="${libs} -lcurses"
else
  error "ncurses is required for compilation"
fi

# -lpng (optional)
if link_lib_against_test_program png_create_info_struct png ; then
  defines="${defines}#define cimg_use_png 1${NEWLINE}"
  libs="${libs} -lpng"
fi

# -ljpg
if link_lib_against_test_program jpeg_set_defaults jpeg ; then
  defines="${defines}#define cimg_use_jpeg 1${NEWLINE}"
  libs="${libs} -ljpeg"
fi

# pandoc(1)
if check_for_program pandoc ; then
  pandoc="pandoc"
else
  echo "warning: ignoring requirement for pandoc..." 1>&2
  pandoc="true"
fi


############################### Generate files ###############################

echo "creating config.mk"
cat > config.mk <<EOF
# AUTOGENERATED FILE! DO NOT MODIFY!
PACKAGE_VERSION = ${version}
PANDOC = ${pandoc}
LIBS = ${libs}
EOF

echo "creating src/config.h"
cat > src/config.h <<EOF
/* AUTOGENERATED FILE; DO NOT MODIFY */
#ifndef CONFIG_H
#define CONFIG_H
#define PACKAGE_VERSION "${version}"
#endif /* CONFIG_H */
EOF

echo "creating src/cimg_config.h"
cat > src/cimg_config.h <<EOF
/* AUTOGENERATED FILE; DO NOT MODIFY */
#ifndef CIMG_CONFIG_H
#define CIMG_CONFIG_H
/* IMPORTANT! Include this BEFORE CImg.h. */
${defines}
#endif /* CIMG_CONFIG_H */
EOF

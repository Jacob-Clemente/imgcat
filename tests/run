#!/bin/bash

# Copyright (c) 2017  Eddie Antonio Santos <easantos@ualberta.ca>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -u

# Parallel arrays of invocations (the command line), and its output.
declare -a INVOCATIONS
declare -a OUTPUT
declare -a STDERR

# Array of indices to invocations, output, stderr.
declare -a FAILURES

IMGCAT="$(realpath "$1")"

ORIGINAL_DIR="$(pwd)"
SCRIPT_DIR="$(dirname "$0")"

_assert() {
  local output stderr bin
  local -i status
  bin="${1/imgcat/$IMGCAT}"
  shift
  output="$(mktemp)"
  stderr="$(mktemp)"

  # || : prevents this from exiting prematurely
  "$bin" "$@" >"$output" 2>"$stderr"
  status=$?
  INVOCATIONS+=("$bin $*")
  OUTPUT+=("$(cat "$output")")
  STDERR+=("$(cat "$stderr")")

  unlink "$output"
  unlink "$stderr"

  return $status
}

_add_failure() {
  local -i items="${#INVOCATIONS[@]}"
  FAILURES+=("$((items - 1))")
}

assert_ok() {
  _assert "$@" || _add_failure
}

assert_fail() {
  _assert "$@" && _add_failure
}

assert_eq() {
  local expected="$1"; shift;
  _assert "$@" || {
    _add_failure
    return
  }
  local -i last
  last=$(( ${#OUTPUT[@]} - 1))
  diff "$expected" - <<<"${OUTPUT[$last]}" >/dev/null || _add_failure
}

print_success() {
  echo "$ncases tests passed"
}

print_failures() {
  for index in "${FAILURES[@]}"; do
    echo "Failed: ${INVOCATIONS[$index]}"
    echo "=== stderr ==="
    echo "${STDERR[$index]}"
    echo "=== output ==="
    echo "${OUTPUT[$index]}"
  done

  echo

  echo "Failures:   $nfailures"
  echo "Tests:      $ncases"
}

# Run the tests in test-cases
cd "$SCRIPT_DIR" || exit -1
source test-cases.sh || exit -1
cd "$ORIGINAL_DIR" || exit -1

declare -i nfailures="${#FAILURES[@]}"
declare -i ncases="${#INVOCATIONS[@]}"
if ((nfailures > 0)); then
  print_failures
  exit -1
else
  print_success
fi
